{
    "abbrev": "",
    "description": [
        "Asks whether to initialise a git repo on startup",
        "- Initialise repo",
        "- Add standard LaTeX .gitignore",
        "- Commit everything",
        "- Asks whether to make a remote GitHub repo, if yes:",
        "  - Asks for name, description and privacy setting"
    ],
    "formatVersion": 1,
    "menu": "Git Integration",
    "name": "Git Init and Setup GitHub Remote",
    "shortcut": "",
    "tag": [
        "%SCRIPT",
        "if (confirm(\"Make git repo in current directory?\\nNote: this will also download a standard .gitignore template for TeX projects\")) {",
        "\tworkDir = editor.fileName()",
        "\tworkDir = workDir.substring(0, workDir.lastIndexOf(\"/\"))",
        "\t",
        "\tsystem(\"git init -b main\", workDir)",
        "\t",
        "\t// download github's standard gitignore for TeX projects",
        "\tcmd = system(\"cmd /C \\\"curl https://raw.githubusercontent.com/github/gitignore/main/TeX.gitignore > .gitignore\\\"\", workDir)",
        "\tcmd.waitForFinished()",
        "",
        "\tprompt = new UniversalInputDialog()",
        "\tprompt.setWindowTitle(\"Initial Commit Message\")",
        "\tprompt.add(\"Initial Commit\", \"Message\", \"m\")",
        "\tif (prompt.exec() != null) {",
        "\t\tcmd = system(\"git add .\", workDir)",
        "\t\tcmd.waitForFinished()",
        "\t\tcmd = system(\"git commit -m \\\"\"+prompt.get(\"m\") + \"\\\"\", workDir)",
        "\t\tcmd.waitForFinished()",
        "",
        "\t\tif (confirm(\"Set up GitHub repo and push to it?\\nNote: Requires GitHub CLI to be set up and configured first!\\nNote: Names must observe GitHub naming rules\")){",
        "\t\t\tprompt = new UniversalInputDialog()",
        "\t\t\tprompt.setWindowTitle(\"GitHub Repo Options\")",
        "\t\t\tprompt.add(\"MyLaTeXRepo\", \"Repo Name\", \"name\")",
        "\t\t\tprompt.add(\"This is my latex repo\", \"Decription\", \"desc\")",
        "\t\t\tprompt.add([\"Public\", \"Private\"], \"Privacy\", \"priv\")",
        "\t",
        "\t\t\tif (prompt.exec() != null) {",
        "\t\t\t\tname = prompt.get(\"name\")",
        "\t\t\t\tpriv = \"--p\" + prompt.get(\"priv\").toString().substring(1)",
        "\t\t\t\tdesc = \"--description \\\"\" + prompt.get(\"desc\") + \"\\\"\"",
        "\t",
        "\t\t\t\t// due to TeXStudio shell weirdness we need to write to a batch file first...",
        "\t\t\t\twriteFile(workDir + \"/gh_create.bat\", \"gh repo create \" + name + \" \" + priv + \" \" + desc + \" --source \" + workDir + \" --push\")",
        "\t\t\t\tcmd = system(\"cmd /C \" + workDir + \"/gh_create.bat\", workDir)",
        "\t\t\t\tcmd.waitForFinished()",
        "\t\t\t\tsystem(\"cmd /C \\\"del gh_create.bat\\\"\", workDir)  // clean up batch",
        "\t\t\t}",
        "\t\t}",
        "\t}",
        "}"
    ],
    "trigger": ""
}
